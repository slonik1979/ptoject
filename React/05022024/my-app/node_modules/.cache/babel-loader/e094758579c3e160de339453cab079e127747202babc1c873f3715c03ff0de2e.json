{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\ptoject\\\\React\\\\05022024\\\\my-app\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = props => {\n  const postsElements = props.posts.map(post => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      message: post.message,\n      like: post.like,\n      id: post.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  });\n  let newPostElement = /*#__PURE__*/React.createRef();\n  let addPost = () => {\n    props.dispatch({\n      type: 'ADD-POST'\n    });\n    // props.updateNewPostText('');\n  };\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    props.dispatch({\n      type: 'UPDATE_NEW_POST_TEXT',\n      randomText\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"My posts\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onPostChange,\n        ref: newPostElement,\n        value: props.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["classes","Post","React","jsxDEV","_jsxDEV","MyPosts","props","postsElements","posts","map","post","message","like","id","fileName","_jsxFileName","lineNumber","columnNumber","newPostElement","createRef","addPost","dispatch","type","onPostChange","text","current","value","randomText","children","onChange","ref","newPostText","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/ptoject/React/05022024/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\n\r\nconst MyPosts = (props) => {\r\n  const postsElements = props.posts.map((post) => {\r\n    return <Post message={post.message} like={post.like} id={post.id} />;\r\n  });\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let addPost = () => {\r\n    props.dispatch({ type: 'ADD-POST' });\r\n    // props.updateNewPostText('');\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.dispatch({ type: 'UPDATE_NEW_POST_TEXT', randomText });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      My posts\r\n      <div>\r\n        <textarea\r\n          onChange={onPostChange}\r\n          ref={newPostElement}\r\n          value={props.newPostText}\r\n        />\r\n        <button onClick={addPost}>Add post</button>\r\n      </div>\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;IAC9C,oBAAON,OAAA,CAACH,IAAI;MAACU,OAAO,EAAED,IAAI,CAACC,OAAQ;MAACC,IAAI,EAAEF,IAAI,CAACE,IAAK;MAACC,EAAE,EAAEH,IAAI,CAACG;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE,CAAC,CAAC;EAEF,IAAIC,cAAc,gBAAGhB,KAAK,CAACiB,SAAS,CAAC,CAAC;EAEtC,IAAIC,OAAO,GAAGA,CAAA,KAAM;IAClBd,KAAK,CAACe,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAW,CAAC,CAAC;IACpC;EACF,CAAC;EAED,IAAIC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,IAAI,GAAGN,cAAc,CAACO,OAAO,CAACC,KAAK;IACvCpB,KAAK,CAACe,QAAQ,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEK;IAAW,CAAC,CAAC;EAC9D,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,GAAK,UAEH,eAAAxB,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QACEyB,QAAQ,EAAEN,YAAa;QACvBO,GAAG,EAAEZ,cAAe;QACpBQ,KAAK,EAAEpB,KAAK,CAACyB;MAAY;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFb,OAAA;QAAQ4B,OAAO,EAAEZ,OAAQ;QAAAQ,QAAA,EAAC;MAAQ;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACNb,OAAA;MAAK6B,SAAS,EAAEjC,OAAO,CAACQ,KAAM;MAAAoB,QAAA,EAAErB;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAACiB,EAAA,GA/BI7B,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}