{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\ptoject\\\\React\\\\05022024\\\\my-app\\\\src\\\\components\\\\Content\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport Post from './Post/Post';\nimport classes from './MyPosts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = props => {\n  let messagesElement = props.posts.map(el => /*#__PURE__*/_jsxDEV(Post, {\n    message: el.name,\n    like: el.like\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this));\n  let newPostElement = /*#__PURE__*/React.createRef();\n  let addPost = () => {\n    props.addPost();\n  };\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    props.updateNewPostText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.myPostBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onPostChange,\n        ref: newPostElement,\n        value: props.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"New post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.posts,\n      children: messagesElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","Post","classes","jsxDEV","_jsxDEV","MyPosts","props","messagesElement","posts","map","el","message","name","like","fileName","_jsxFileName","lineNumber","columnNumber","newPostElement","createRef","addPost","onPostChange","text","current","value","updateNewPostText","className","myPostBlock","children","onChange","ref","newPostText","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/ptoject/React/05022024/my-app/src/components/Content/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport Post from './Post/Post';\r\nimport classes from './MyPosts.module.css';\r\n\r\nconst MyPosts = (props) => {\r\n  let messagesElement = props.posts.map((el) => (\r\n    <Post message={el.name} like={el.like} />\r\n  ));\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let addPost = () => {\r\n    props.addPost();\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.myPostBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <textarea\r\n          onChange={onPostChange}\r\n          ref={newPostElement}\r\n          value={props.newPostText}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button onClick={addPost}>Add post</button>\r\n      </div>\r\n      <div>New post</div>\r\n      <div className={classes.posts}>{messagesElement}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACzB,IAAIC,eAAe,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAAEC,EAAE,iBACvCN,OAAA,CAACH,IAAI;IAACU,OAAO,EAAED,EAAE,CAACE,IAAK;IAACC,IAAI,EAAEH,EAAE,CAACG;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACzC,CAAC;EAEF,IAAIC,cAAc,gBAAGlB,KAAK,CAACmB,SAAS,CAAC,CAAC;EAEtC,IAAIC,OAAO,GAAGA,CAAA,KAAM;IAClBd,KAAK,CAACc,OAAO,CAAC,CAAC;EACjB,CAAC;EAED,IAAIC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,IAAI,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK;IACvClB,KAAK,CAACmB,iBAAiB,CAACH,IAAI,CAAC;EAC/B,CAAC;EAED,oBACElB,OAAA;IAAKsB,SAAS,EAAExB,OAAO,CAACyB,WAAY;IAAAC,QAAA,gBAClCxB,OAAA;MAAAwB,QAAA,EAAI;IAAQ;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAAwB,QAAA,eACExB,OAAA;QACEyB,QAAQ,EAAER,YAAa;QACvBS,GAAG,EAAEZ,cAAe;QACpBM,KAAK,EAAElB,KAAK,CAACyB;MAAY;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNb,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQ4B,OAAO,EAAEZ,OAAQ;QAAAQ,QAAA,EAAC;MAAQ;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACNb,OAAA;MAAAwB,QAAA,EAAK;IAAQ;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBb,OAAA;MAAKsB,SAAS,EAAExB,OAAO,CAACM,KAAM;MAAAoB,QAAA,EAAErB;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACgB,EAAA,GAjCI5B,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}